// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package db

import (
	"time"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type Order struct {
	ID         uuid.UUID          `db:"id" json:"id"`
	Code       string             `db:"code" json:"code"`
	UserID     uuid.UUID          `db:"user_id" json:"user_id"`
	TotalPrice int32              `db:"total_price" json:"total_price"`
	Status     string             `db:"status" json:"status"`
	CreatedAt  time.Time          `db:"created_at" json:"created_at"`
	UpdatedAt  time.Time          `db:"updated_at" json:"updated_at"`
	DeletedAt  pgtype.Timestamptz `db:"deleted_at" json:"deleted_at"`
}

type OrderLine struct {
	ID        uuid.UUID          `db:"id" json:"id"`
	OrderID   uuid.UUID          `db:"order_id" json:"order_id"`
	ProductID uuid.UUID          `db:"product_id" json:"product_id"`
	Quantity  int16              `db:"quantity" json:"quantity"`
	Price     int32              `db:"price" json:"price"`
	CreatedAt time.Time          `db:"created_at" json:"created_at"`
	UpdatedAt time.Time          `db:"updated_at" json:"updated_at"`
	DeletedAt pgtype.Timestamptz `db:"deleted_at" json:"deleted_at"`
}

type Product struct {
	ID          uuid.UUID          `db:"id" json:"id"`
	Code        string             `db:"code" json:"code"`
	Name        string             `db:"name" json:"name"`
	ImageUrl    pgtype.Text        `db:"image_url" json:"image_url"`
	Description pgtype.Text        `db:"description" json:"description"`
	CreatedAt   time.Time          `db:"created_at" json:"created_at"`
	UpdatedAt   time.Time          `db:"updated_at" json:"updated_at"`
	DeletedAt   pgtype.Timestamptz `db:"deleted_at" json:"deleted_at"`
}

type User struct {
	ID        uuid.UUID          `db:"id" json:"id"`
	Email     string             `db:"email" json:"email"`
	Name      string             `db:"name" json:"name"`
	AvatarUrl pgtype.Text        `db:"avatar_url" json:"avatar_url"`
	Password  string             `db:"password" json:"password"`
	CreatedAt time.Time          `db:"created_at" json:"created_at"`
	UpdatedAt time.Time          `db:"updated_at" json:"updated_at"`
	DeletedAt pgtype.Timestamptz `db:"deleted_at" json:"deleted_at"`
}
